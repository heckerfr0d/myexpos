alias process_table_entry R4;
process_table_entry = PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16;

// set MODE FLAG (in PROCESS TABLE) to syscall number
[process_table_entry + 9] = INT_SHUTDOWN;

// shutdown not allowed
if ([SYSTEM_STATUS_TABLE+1]>2 || [process_table_entry+3]!=1) then
    [[PTBR + 2*(SP-1)/512]*512 + (SP-1)%512] = 0;
    [process_table_entry + 9] = 0;
    ireturn;
endif;

// switch to kernel stack
[process_table_entry + 13] = SP;
SP = [process_table_entry + 11]*512 - 1;

// mass murder
R1 = KILL_ALL;
R2 = [SYSTEM_STATUS_TABLE + 1];
call PROCESS_MANAGER;

// writeback buffers
alias i R1;
i = 1;
while (i<16) do
    if ([BUFFER_TABLE + i]==1) then
        // writeback
        multipush(R1);
        R4 = [BUFFER_TABLE + i - 1];
        R3 = BUFFER_BASE + i/4;
        R2 = [SYSTEM_STATUS_TABLE+1];
        R1 = DISK_STORE;
        call DEVICE_MANAGER;
        multipop(R1);
    endif;
    i = i + 4;
endwhile;

// store DISK_FREE_LIST
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE+1];
R3 = 61;
R4 = 2;
call DEVICE_MANAGER;

// store INODE_TABLE
R3 = 59;
R4 = 3;
call DEVICE_MANAGER;
R3 = 60;
R4 = 4;
call DEVICE_MANAGER;

// store root file
R3 = 62;
R4 = 5;
call DEVICE_MANAGER;

halt;