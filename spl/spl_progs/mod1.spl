alias functionNum R1;
alias currentPID R2;

if (functionNum == 2) then
    // free UAPage
    multipush(R0, R1, R2);
    R1 = 2;
    R2 = [PROCESS_TABLE + currentPID*16 + 11];
    call MEMORY_MANAGER;
    multipop(R0, R1, R2);

    return;
endif;

if (functionNum == 3) then
    // exit
    multipush(R0, R1, R2);

    // free pageTable
    R1 = 4;
    call PROCESS_MANAGER;

    // free UAPage
    R1 = 2;
    call PROCESS_MANAGER;

    multipop(R0, R1, R2);

    [PROCESS_TABLE + currentPID*16 + 4] = TERMINATED;
    return;
endif;

if (functionNum == 4) then
    // free pageTable
    alias pageTable R3;
    pageTable = [PROCESS_TABLE + currentPID*16 + 14];
    [pageTable + 0] = -1;
    [pageTable + 1] = "0000";
    [pageTable + 2] = -1;
    [pageTable + 3] = "0000";

    alias limit R4;
    limit = pageTable + 20;
    pageTable = pageTable + 4;
    while (pageTable < limit) do

        multipush(R0, R1, R2, R3, R4);
        R1 = 2;
        R2 = [pageTable];
        call MEMORY_MANAGER;
        multipop(R0, R1, R2, R3, R4);

        [pageTable] = -1;
        [pageTable + 1] = "0000";
        pageTable = pageTable + 2;
    endwhile;
    return;
endif;